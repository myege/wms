<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zt.dao.mapper.TQjzyMapper" >
  <resultMap id="BaseResultMap" type="com.zt.pojo.po.TQjzy" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="companyCode" property="companycode" jdbcType="VARCHAR" />
    <result column="itemName" property="itemname" jdbcType="VARCHAR" />
    <result column="itemSku" property="itemsku" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="receivedAddress" property="receivedaddress" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="storage" property="storage" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, companyCode, itemName, itemSku, num, receivedAddress, receiver, type, createTime, 
    storage
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zt.pojo.po.TQjzyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_qjzy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_qjzy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_qjzy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zt.pojo.po.TQjzyExample" >
    delete from t_qjzy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zt.pojo.po.TQjzy" >
    insert into t_qjzy (id, companyCode, itemName, 
      itemSku, num, receivedAddress, 
      receiver, type, createTime, 
      storage)
    values (#{id,jdbcType=INTEGER}, #{companycode,jdbcType=VARCHAR}, #{itemname,jdbcType=VARCHAR}, 
      #{itemsku,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{receivedaddress,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{storage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zt.pojo.po.TQjzy" >
    insert into t_qjzy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companycode != null" >
        companyCode,
      </if>
      <if test="itemname != null" >
        itemName,
      </if>
      <if test="itemsku != null" >
        itemSku,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="receivedaddress != null" >
        receivedAddress,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="storage != null" >
        storage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companycode != null" >
        #{companycode,jdbcType=VARCHAR},
      </if>
      <if test="itemname != null" >
        #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="itemsku != null" >
        #{itemsku,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="receivedaddress != null" >
        #{receivedaddress,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zt.pojo.po.TQjzyExample" resultType="java.lang.Integer" >
    select count(*) from t_qjzy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_qjzy
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companycode != null" >
        companyCode = #{record.companycode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemname != null" >
        itemName = #{record.itemname,jdbcType=VARCHAR},
      </if>
      <if test="record.itemsku != null" >
        itemSku = #{record.itemsku,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.receivedaddress != null" >
        receivedAddress = #{record.receivedaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storage != null" >
        storage = #{record.storage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_qjzy
    set id = #{record.id,jdbcType=INTEGER},
      companyCode = #{record.companycode,jdbcType=VARCHAR},
      itemName = #{record.itemname,jdbcType=VARCHAR},
      itemSku = #{record.itemsku,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      receivedAddress = #{record.receivedaddress,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      storage = #{record.storage,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zt.pojo.po.TQjzy" >
    update t_qjzy
    <set >
      <if test="companycode != null" >
        companyCode = #{companycode,jdbcType=VARCHAR},
      </if>
      <if test="itemname != null" >
        itemName = #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="itemsku != null" >
        itemSku = #{itemsku,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="receivedaddress != null" >
        receivedAddress = #{receivedaddress,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="storage != null" >
        storage = #{storage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zt.pojo.po.TQjzy" >
    update t_qjzy
    set companyCode = #{companycode,jdbcType=VARCHAR},
      itemName = #{itemname,jdbcType=VARCHAR},
      itemSku = #{itemsku,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      receivedAddress = #{receivedaddress,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      storage = #{storage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>