<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zt.dao.mapper.CheckMapperCustom" >
<sql id="whereCheckCustom">
		<if test="tCheck!=null">
			<where>
				<if test="tCheck.storage!=null">
					and storage like '%${tCheck.storage}%'
				</if>
				<if test="tCheck.companycode!=null">
					and companycode like '%${tCheck.companycode}%'
				</if>
				<if test="tCheck.isdelete!=null">
					and isdelete like '%${tCheck.isdelete}%'
				</if>
				<if test="tCheck.code!=null">
					and code = '${tCheck.code}'
				</if>
			</where>
		</if>
</sql>

<select id="findAll" parameterType="com.zt.pojo.vo.TCheckQueryVo" resultType="com.zt.pojo.po.TCheck">
	select * from t_check
	<include refid="whereCheckCustom"/>
	<include refid="com.zt.dao.mapper.Common.pageQuery"/>
</select>
 
<select id="count" parameterType="com.zt.pojo.vo.TCheckQueryVo" resultType="int">
 	select count(id) from t_check
 	<include refid="whereCheckCustom"/>
</select>

<insert id="addList">
  insert into t_check (companycode, itemname, 
      itemcode, itemsku, storage, 
      inventory, isdelete, createTime ,code) values 
  <foreach collection="list" item="item" separator="," >
  (#{item.companycode}, #{item.itemname}, #{item.itemcode}, #{item.itemsku}, #{item.storage}, 
   #{item.inventory},0, now(),#{item.fronzenReason})
  </foreach>
</insert>
  
<select id="findStorage" resultType="string">
	select storage from t_check
</select>

<select id="findStorageZY" resultType="int">
  select count(id) from t_check where Storage in
  <foreach collection="array" item="item" open="(" close=")" separator=",">
  	'${item}'
  </foreach>
  and isdelete = 0
</select>
<select id="findCode" resultType="string">
	SELECT DISTINCT code from t_check where isdelete = 0
</select>

<update id="updateCheck" parameterType="com.zt.pojo.po.TCheck">
<foreach collection="list"  item="item">
	update t_check set tinventory = #{item.tinventory}, tname=#{item.tname}, tcode=#{item.tcode} , tsku=#{item.tsku}, tcompany= #{item.tcompany} where storage = #{item.storage} and isdelete=0;
</foreach>
</update>

<select id="findById" parameterType="string" resultType="com.zt.pojo.po.TCheck">
	select * from t_check where id in (#{0})
</select>
<insert id="insertLog"  >
	insert into log_r_inventory (storage, sum, type, remark,  createTime)
    values
    <foreach collection="list"  separator=","  item="item"></foreach>
 (#{item.storage,jdbcType=VARCHAR},  #{item.sum,jdbcType=INTEGER}, #{item.type,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, #{item.createtime,jdbcType=TIMESTAMP})
</insert> 
<update id="updeteInventory" >
<foreach collection="list" item="item"  separator=";">
	update r_inventory set inventory = #{item.tinventory},companyCode=#{item.tcompany},itemcode=#{item.code},itemsku=#{item.tsku}
	<if test="item.tinventory==0"> ,type=1 </if>where storage=#{item.storage} and type=0
</foreach>
</update>
<update id="deleteById" parameterType="string">
update t_check set isdelete = 1 where id in <foreach collection="array" separator="," open="(" close=")" item="it">#{it}</foreach>
</update>

</mapper>