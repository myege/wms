<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zt.dao.mapper.JsSuppliesSkuMapper" >
  <resultMap id="BaseResultMap" type="com.zt.pojo.po.JsSuppliesSku" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="companyCode" property="companycode" jdbcType="VARCHAR" />
    <result column="mailNo" property="mailno" jdbcType="VARCHAR" />
    <result column="suppliesId" property="suppliesid" jdbcType="VARCHAR" />
    <result column="suppliesName" property="suppliesname" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="buyTime" property="buytime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, companyCode, mailNo, suppliesId, suppliesName, price, number, money, buyTime, 
    type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zt.pojo.po.JsSuppliesSkuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from js_supplies_sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from js_supplies_sku
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from js_supplies_sku
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zt.pojo.po.JsSuppliesSkuExample" >
    delete from js_supplies_sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zt.pojo.po.JsSuppliesSku" >
    insert into js_supplies_sku (id, companyCode, mailNo, 
      suppliesId, suppliesName, price, 
      number, money, buyTime, 
      type)
    values (#{id,jdbcType=INTEGER}, #{companycode,jdbcType=VARCHAR}, #{mailno,jdbcType=VARCHAR}, 
      #{suppliesid,jdbcType=VARCHAR}, #{suppliesname,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{number,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, #{buytime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zt.pojo.po.JsSuppliesSku" >
    insert into js_supplies_sku
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companycode != null" >
        companyCode,
      </if>
      <if test="mailno != null" >
        mailNo,
      </if>
      <if test="suppliesid != null" >
        suppliesId,
      </if>
      <if test="suppliesname != null" >
        suppliesName,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="buytime != null" >
        buyTime,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companycode != null" >
        #{companycode,jdbcType=VARCHAR},
      </if>
      <if test="mailno != null" >
        #{mailno,jdbcType=VARCHAR},
      </if>
      <if test="suppliesid != null" >
        #{suppliesid,jdbcType=VARCHAR},
      </if>
      <if test="suppliesname != null" >
        #{suppliesname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="buytime != null" >
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zt.pojo.po.JsSuppliesSkuExample" resultType="java.lang.Integer" >
    select count(*) from js_supplies_sku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update js_supplies_sku
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companycode != null" >
        companyCode = #{record.companycode,jdbcType=VARCHAR},
      </if>
      <if test="record.mailno != null" >
        mailNo = #{record.mailno,jdbcType=VARCHAR},
      </if>
      <if test="record.suppliesid != null" >
        suppliesId = #{record.suppliesid,jdbcType=VARCHAR},
      </if>
      <if test="record.suppliesname != null" >
        suppliesName = #{record.suppliesname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.buytime != null" >
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update js_supplies_sku
    set id = #{record.id,jdbcType=INTEGER},
      companyCode = #{record.companycode,jdbcType=VARCHAR},
      mailNo = #{record.mailno,jdbcType=VARCHAR},
      suppliesId = #{record.suppliesid,jdbcType=VARCHAR},
      suppliesName = #{record.suppliesname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      number = #{record.number,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zt.pojo.po.JsSuppliesSku" >
    update js_supplies_sku
    <set >
      <if test="companycode != null" >
        companyCode = #{companycode,jdbcType=VARCHAR},
      </if>
      <if test="mailno != null" >
        mailNo = #{mailno,jdbcType=VARCHAR},
      </if>
      <if test="suppliesid != null" >
        suppliesId = #{suppliesid,jdbcType=VARCHAR},
      </if>
      <if test="suppliesname != null" >
        suppliesName = #{suppliesname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="buytime != null" >
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zt.pojo.po.JsSuppliesSku" >
    update js_supplies_sku
    set companyCode = #{companycode,jdbcType=VARCHAR},
      mailNo = #{mailno,jdbcType=VARCHAR},
      suppliesId = #{suppliesid,jdbcType=VARCHAR},
      suppliesName = #{suppliesname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      number = #{number,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>