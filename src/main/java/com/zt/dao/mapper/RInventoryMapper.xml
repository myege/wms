<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zt.dao.mapper.RInventoryMapper" >
  <resultMap id="BaseResultMap" type="com.zt.pojo.po.RInventory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="companyCode" property="companycode" jdbcType="VARCHAR" />
    <result column="itemName" property="itemname" jdbcType="VARCHAR" />
    <result column="itemCode" property="itemcode" jdbcType="VARCHAR" />
    <result column="storage" property="storage" jdbcType="VARCHAR" />
    <result column="sum" property="sum" jdbcType="INTEGER" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
    <result column="InventoryOccupy" property="inventoryoccupy" jdbcType="INTEGER" />
    <result column="InventoryFrozen" property="inventoryfrozen" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="betterUseData" property="betterusedata" jdbcType="DATE" />
    <result column="omwtype" property="omwtype" jdbcType="INTEGER" />
    <result column="itemSku" property="itemsku" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="defective" property="defective" jdbcType="INTEGER" />
    <result column="shift" property="shift" jdbcType="INTEGER" />
    <result column="isPushDefects" property="ispushdefects" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, companyCode, itemName, itemCode, storage, sum, inventory, InventoryOccupy, InventoryFrozen, 
    type, betterUseData, omwtype, itemSku, sort, defective, shift, isPushDefects
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zt.pojo.po.RInventoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from r_inventory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from r_inventory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zt.pojo.po.RInventoryExample" >
    delete from r_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zt.pojo.po.RInventory" >
    insert into r_inventory (id, companyCode, itemName, 
      itemCode, storage, sum, 
      inventory, InventoryOccupy, InventoryFrozen, 
      type, betterUseData, omwtype, 
      itemSku, sort, defective, 
      shift, isPushDefects,createTime)
    values (#{id,jdbcType=INTEGER}, #{companycode,jdbcType=VARCHAR}, #{itemname,jdbcType=VARCHAR}, 
      #{itemcode,jdbcType=VARCHAR}, #{storage,jdbcType=VARCHAR}, #{sum,jdbcType=INTEGER}, 
      #{inventory,jdbcType=INTEGER}, #{inventoryoccupy,jdbcType=INTEGER}, #{inventoryfrozen,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{betterusedata,jdbcType=DATE}, #{omwtype,jdbcType=INTEGER}, 
      #{itemsku,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{defective,jdbcType=INTEGER}, 
      #{shift,jdbcType=INTEGER}, #{ispushdefects,jdbcType=INTEGER}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.zt.pojo.po.RInventory" >
    insert into r_inventory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companycode != null" >
        companyCode,
      </if>
      <if test="itemname != null" >
        itemName,
      </if>
      <if test="itemcode != null" >
        itemCode,
      </if>
      <if test="storage != null" >
        storage,
      </if>
      <if test="sum != null" >
        sum,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="inventoryoccupy != null" >
        InventoryOccupy,
      </if>
      <if test="inventoryfrozen != null" >
        InventoryFrozen,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="betterusedata != null" >
        betterUseData,
      </if>
      <if test="omwtype != null" >
        omwtype,
      </if>
      <if test="itemsku != null" >
        itemSku,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="defective != null" >
        defective,
      </if>
      <if test="shift != null" >
        shift,
      </if>
      <if test="ispushdefects != null" >
        isPushDefects,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companycode != null" >
        #{companycode,jdbcType=VARCHAR},
      </if>
      <if test="itemname != null" >
        #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="itemcode != null" >
        #{itemcode,jdbcType=VARCHAR},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=VARCHAR},
      </if>
      <if test="sum != null" >
        #{sum,jdbcType=INTEGER},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="inventoryoccupy != null" >
        #{inventoryoccupy,jdbcType=INTEGER},
      </if>
      <if test="inventoryfrozen != null" >
        #{inventoryfrozen,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="betterusedata != null" >
        #{betterusedata,jdbcType=DATE},
      </if>
      <if test="omwtype != null" >
        #{omwtype,jdbcType=INTEGER},
      </if>
      <if test="itemsku != null" >
        #{itemsku,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="defective != null" >
        #{defective,jdbcType=INTEGER},
      </if>
      <if test="shift != null" >
        #{shift,jdbcType=INTEGER},
      </if>
      <if test="ispushdefects != null" >
        #{ispushdefects,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zt.pojo.po.RInventoryExample" resultType="java.lang.Integer" >
    select count(*) from r_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update r_inventory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companycode != null" >
        companyCode = #{record.companycode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemname != null" >
        itemName = #{record.itemname,jdbcType=VARCHAR},
      </if>
      <if test="record.itemcode != null" >
        itemCode = #{record.itemcode,jdbcType=VARCHAR},
      </if>
      <if test="record.storage != null" >
        storage = #{record.storage,jdbcType=VARCHAR},
      </if>
      <if test="record.sum != null" >
        sum = #{record.sum,jdbcType=INTEGER},
      </if>
      <if test="record.inventory != null" >
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.inventoryoccupy != null" >
        InventoryOccupy = #{record.inventoryoccupy,jdbcType=INTEGER},
      </if>
      <if test="record.inventoryfrozen != null" >
        InventoryFrozen = #{record.inventoryfrozen,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.betterusedata != null" >
        betterUseData = #{record.betterusedata,jdbcType=DATE},
      </if>
      <if test="record.omwtype != null" >
        omwtype = #{record.omwtype,jdbcType=INTEGER},
      </if>
      <if test="record.itemsku != null" >
        itemSku = #{record.itemsku,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.defective != null" >
        defective = #{record.defective,jdbcType=INTEGER},
      </if>
      <if test="record.shift != null" >
        shift = #{record.shift,jdbcType=INTEGER},
      </if>
      <if test="record.ispushdefects != null" >
        isPushDefects = #{record.ispushdefects,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update r_inventory
    set id = #{record.id,jdbcType=INTEGER},
      companyCode = #{record.companycode,jdbcType=VARCHAR},
      itemName = #{record.itemname,jdbcType=VARCHAR},
      itemCode = #{record.itemcode,jdbcType=VARCHAR},
      storage = #{record.storage,jdbcType=VARCHAR},
      sum = #{record.sum,jdbcType=INTEGER},
      inventory = #{record.inventory,jdbcType=INTEGER},
      InventoryOccupy = #{record.inventoryoccupy,jdbcType=INTEGER},
      InventoryFrozen = #{record.inventoryfrozen,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      betterUseData = #{record.betterusedata,jdbcType=DATE},
      omwtype = #{record.omwtype,jdbcType=INTEGER},
      itemSku = #{record.itemsku,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      defective = #{record.defective,jdbcType=INTEGER},
      shift = #{record.shift,jdbcType=INTEGER},
      isPushDefects = #{record.ispushdefects,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zt.pojo.po.RInventory" >
    update r_inventory
    <set >
      <if test="companycode != null" >
        companyCode = #{companycode,jdbcType=VARCHAR},
      </if>
      <if test="itemname != null" >
        itemName = #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="itemcode != null" >
        itemCode = #{itemcode,jdbcType=VARCHAR},
      </if>
      <if test="storage != null" >
        storage = #{storage,jdbcType=VARCHAR},
      </if>
      <if test="sum != null" >
        sum = #{sum,jdbcType=INTEGER},
      </if>
      <if test="inventory != null" >
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="inventoryoccupy != null" >
        InventoryOccupy = #{inventoryoccupy,jdbcType=INTEGER},
      </if>
      <if test="inventoryfrozen != null" >
        InventoryFrozen = #{inventoryfrozen,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="betterusedata != null" >
        betterUseData = #{betterusedata,jdbcType=DATE},
      </if>
      <if test="omwtype != null" >
        omwtype = #{omwtype,jdbcType=INTEGER},
      </if>
      <if test="itemsku != null" >
        itemSku = #{itemsku,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="defective != null" >
        defective = #{defective,jdbcType=INTEGER},
      </if>
      <if test="shift != null" >
        shift = #{shift,jdbcType=INTEGER},
      </if>
      <if test="ispushdefects != null" >
        isPushDefects = #{ispushdefects,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zt.pojo.po.RInventory" >
    update r_inventory
    set companyCode = #{companycode,jdbcType=VARCHAR},
      itemName = #{itemname,jdbcType=VARCHAR},
      itemCode = #{itemcode,jdbcType=VARCHAR},
      storage = #{storage,jdbcType=VARCHAR},
      sum = #{sum,jdbcType=INTEGER},
      inventory = #{inventory,jdbcType=INTEGER},
      InventoryOccupy = #{inventoryoccupy,jdbcType=INTEGER},
      InventoryFrozen = #{inventoryfrozen,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      betterUseData = #{betterusedata,jdbcType=DATE},
      omwtype = #{omwtype,jdbcType=INTEGER},
      itemSku = #{itemsku,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      defective = #{defective,jdbcType=INTEGER},
      shift = #{shift,jdbcType=INTEGER},
      isPushDefects = #{ispushdefects,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <update id="updateByIdforbzq" parameterType="com.zt.pojo.po.RInventory" >
    update r_inventory set
      betterUseData = #{betterusedata}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>